* Zaphod

“I can understand that.  I wouldn't trust myself further than I could spit a rat.”

** You Will Not Commit Untested Code!

Catch, and publicly embarrass, untested commits into git.

Zaphod is a formatter for SimpleCov that compares the current git changes 
with the uncovered source reported by SimpleCov.  If any source code appears
both in the uncovered code and git changes, Zaphod will call an #on_failure
hook.  By default, this exits and fails the build.

** Installation

*** Simple Installation

#+BEGIN_SRC ruby
  require "zaphod"
  Zaphod.setup
#+END_SRC

This will set up the Zaphod formatter and start SimpleCov.

Be certain that SimpleCov is started before any of your project's source is loaded.


*** Setup your own SimpleCov Formatters

#+BEGIN_SRC ruby
  require "zaphod"

  SimpleCov.formatter = SimpleCov::Formatter::MultiFormatter[
    SimpleCov::Formatter::HTMLFormatter,  # Optional, I suppose
    SimpleCov::Formatter::ZaphodFormatter
  ]

  SimpleCov.start
#+END_SRC

** Configuration

#+BEGIN_SRC ruby
     require "pony"

     Zaphod.setup do |configuration|
       # Action to take if uncovered changes are found:
       configuration.on_failure do |uncovered_changes|
         Pony.mail(
           to: 'your-team@example.com',
           subject: "Someone is trying to commit untested code!",
           body: uncovered_changes.to_s
           )
         exit -1 # Abort the build with a failing exit code
       end
     end
#+END_SRC

#+BEGIN_SRC ruby
    SimpleCov.formatter = SimpleCov::Formatter::MultiFormatter[
      SimpleCov::Formatter::HTMLFormatter,
      SimpleCov::Formatter::ZaphodFormatter
    ]

    Zaphod.configure do |configuration|
      configuration.on_failure do |uncovered_changes|
        $stderr.puts "What would your mother think?"
        exit -1
      end
    end
    SimpleCov.start
#+END_SRC

** Dependencies

 - Grit
 - SimpleCov

